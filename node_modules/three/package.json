{
  "_args": [
    [
      {
        "raw": "three",
        "scope": null,
        "escapedName": "three",
        "name": null,
        "rawSpec": "three",
        "spec": "C:\\Users\\R2D2\\Documents\\GitHub\\snoman\\three",
        "type": "directory"
      },
      "C:\\Users\\R2D2\\Documents\\GitHub\\snoman"
    ]
  ],
  "_from": "three",
  "_id": "three@0.82.1",
  "_inCache": true,
  "_location": "/three",
  "_phantomChildren": {},
  "_requested": {
    "raw": "three",
    "scope": null,
    "escapedName": "three",
    "name": null,
    "rawSpec": "three",
    "spec": "C:\\Users\\R2D2\\Documents\\GitHub\\snoman\\three",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:three",
  "_shasum": "72ab185b08070e06c884ce5c4206984d90796c4a",
  "_shrinkwrap": null,
  "_spec": "three",
  "_where": "C:\\Users\\R2D2\\Documents\\GitHub\\snoman",
  "author": {
    "name": "mrdoob"
  },
  "bugs": {
    "url": "https://github.com/mrdoob/three.js/issues"
  },
  "dependencies": {},
  "description": "JavaScript 3D library",
  "devDependencies": {
    "argparse": "^1.0.3",
    "jscs": "^1.13.1",
    "rollup": "^0.36.3",
    "rollup-watch": "^2.5.0",
    "uglify-js": "^2.6.0"
  },
  "directories": {
    "doc": "docs",
    "example": "examples",
    "test": "test"
  },
  "files": [
    "package.json",
    "LICENSE",
    "README.md",
    "build/three.js",
    "build/three.min.js",
    "build/three.modules.js",
    "src",
    "examples/js",
    "examples/fonts",
    "bower.json"
  ],
  "homepage": "http://threejs.org/",
  "jsnext:main": "build/three.modules.js",
  "keywords": [
    "three",
    "three.js",
    "3d",
    "webgl"
  ],
  "license": "MIT",
  "main": "build/three.js",
  "name": "three",
  "optionalDependencies": {},
  "readme": "three.js\n========\n\n#### JavaScript 3D library ####\n\nThe aim of the project is to create an easy to use, lightweight, 3D library. The library provides &lt;canvas&gt;, &lt;svg&gt;, CSS3D and WebGL renderers.\n\n[Examples](http://threejs.org/examples/) — [Documentation](http://threejs.org/docs/) — [Migrating](https://github.com/mrdoob/three.js/wiki/Migration) — [Help](http://stackoverflow.com/questions/tagged/three.js)\n\n\n### Usage ###\n\nDownload the [minified library](http://threejs.org/build/three.min.js) and include it in your html.\nAlternatively see [how to build the library yourself](https://github.com/mrdoob/three.js/wiki/build.py,-or-how-to-generate-a-compressed-Three.js-file).\n\n```html\n<script src=\"js/three.min.js\"></script>\n```\n\nThis code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the document.body element. Finally it animates the cube within the scene for the camera.\n\n```javascript\nvar scene, camera, renderer;\nvar geometry, material, mesh;\n\ninit();\nanimate();\n\nfunction init() {\n\n\tscene = new THREE.Scene();\n\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\n\tcamera.position.z = 1000;\n\n\tgeometry = new THREE.BoxGeometry( 200, 200, 200 );\n\tmaterial = new THREE.MeshBasicMaterial( { color: 0xff0000, wireframe: true } );\n\n\tmesh = new THREE.Mesh( geometry, material );\n\tscene.add( mesh );\n\n\trenderer = new THREE.WebGLRenderer();\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\tdocument.body.appendChild( renderer.domElement );\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tmesh.rotation.x += 0.01;\n\tmesh.rotation.y += 0.02;\n\n\trenderer.render( scene, camera );\n\n}\n```\n\nIf everything went well you should see [this](http://jsfiddle.net/hfj7gm6t/).\n\n### Change log ###\n\n[releases](https://github.com/mrdoob/three.js/releases)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mrdoob/three.js.git"
  },
  "scripts": {
    "build": "rollup -c",
    "build-closure": "rollup -c && java -jar utils/build/compiler/closure-compiler-v20160713.jar --warning_level=VERBOSE --jscomp_off=globalThis --jscomp_off=checkTypes --externs utils/build/externs.js --language_in=ECMASCRIPT5_STRICT --js build/three.js --js_output_file build/three.min.js",
    "build-uglify": "rollup -c && uglifyjs build/three.js -cm --preamble \"// threejs.org/license\" > build/three.min.js",
    "dev": "rollup -c -w",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.82.1"
}
